# Generated by Django 5.2.3 on 2025-06-18 23:18

import uuid

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the user",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="User's email address - must be unique",
                        max_length=254,
                        unique=True,
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        help_text="User's first name",
                        max_length=50,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
                (
                    "middle_name",
                    models.CharField(
                        blank=True,
                        help_text="User's middle name (optional)",
                        max_length=50,
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        help_text="User's last name",
                        max_length=50,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="User's phone number in international format",
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?[1-9]\\d{1,14}$",
                            )
                        ],
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, help_text="User's date of birth", null=True
                    ),
                ),
                (
                    "nationality",
                    models.CharField(help_text="User's nationality", max_length=50),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("M", "Male"),
                            ("F", "Female"),
                            ("O", "Other"),
                            ("P", "Prefer not to say"),
                        ],
                        help_text="User's gender",
                        max_length=1,
                    ),
                ),
                (
                    "unique_pin_identifier",
                    models.CharField(
                        editable=False,
                        help_text="9-digit PIN for user identification and authentication",
                        max_length=9,
                        unique=True,
                    ),
                ),
                (
                    "person_id",
                    models.CharField(
                        blank=True,
                        help_text="Azure Face API Person ID from Person Group",
                        max_length=100,
                    ),
                ),
                (
                    "face_added",
                    models.BooleanField(
                        default=False,
                        help_text="Whether user has completed face registration",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether user has been verified by admin",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can access the admin site",
                    ),
                ),
                (
                    "external_data",
                    models.JSONField(
                        blank=True,
                        help_text="Store external API responses and metadata",
                        null=True,
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When the user account was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When the user account was last updated",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users_user",
                "ordering": ["-date_joined"],
                "indexes": [
                    models.Index(fields=["email"], name="users_user_email_6f2530_idx"),
                    models.Index(
                        fields=["phone_number"], name="users_user_phone_n_7fe504_idx"
                    ),
                    models.Index(
                        fields=["unique_pin_identifier"],
                        name="users_user_unique__cb1caf_idx",
                    ),
                    models.Index(
                        fields=["person_id"], name="users_user_person__d66c79_idx"
                    ),
                ],
            },
        ),
    ]
